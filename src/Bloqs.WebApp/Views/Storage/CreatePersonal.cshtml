﻿@model PersonalStorageCreateModel
<h3><a href="@Url.Action("Index","Storage")">ストレージ</a> &gt; 新しい個別ストレージ</h3>

<div class="alert alert-info" role="alert">
    SQL Server認証のみをサポートしています。<br/>
    データベースは自動でマイグレーションされます。
</div>
@using (Html.BeginForm("CreatePersonal","Storage",FormMethod.Post,new {autocomplete = "off"}))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr/>
        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
        <div class="form-group">
            <div class="col-xs-6">
                @Html.LabelFor(model => model.Name)
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-6">
                @Html.LabelFor(model => model.DataSource)
                @Html.EditorFor(model => model.DataSource, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.DataSource, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-6">
                @Html.LabelFor(model => model.InitialCatalog)
                @Html.EditorFor(model => model.InitialCatalog, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.InitialCatalog, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-6">
                @Html.LabelFor(model => model.UserID)
                @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-6">
                @Html.LabelFor(model => model.Password)
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-6">
                @Html.LabelFor(model => model.ThresholdSize)
                @Html.EnumDropDownListFor(model => model.ThresholdSize, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ThresholdSize, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-6">
                <input type="submit" value="登録" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
