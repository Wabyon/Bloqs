﻿@model PersonalStorageEditModel
<h3><a href="@Url.Action("Index","Storage")">ストレージ</a> &gt; 内容の変更</h3>

<div class="alert alert-warning" role="alert">
    <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
    接続情報を変更しても、格納されているBlobデータは自動で移行されません。
</div>

@if (Model.IsAlreadyUsed)
{
    <div class="alert alert-danger" role="alert">
        <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
        すでにアカウントから利用されています。接続情報を変更した場合、Blobデータが取得できなくなる場合があります。
    </div>
}

@using (Html.BeginForm("EditPersonal", "Storage", FormMethod.Post, new { autocomplete = "off" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr/>
        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.IsAlreadyUsed)
        <div class="form-group">
            <div class="col-xs-6">
                @Html.LabelFor(model => model.Name)
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control input-sm"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-6">
                @Html.LabelFor(model => model.DataSource)
                @Html.EditorFor(model => model.DataSource, new {htmlAttributes = new {@class = "form-control input-sm"}})
                @Html.ValidationMessageFor(model => model.DataSource, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-6">
                @Html.LabelFor(model => model.InitialCatalog)
                @Html.EditorFor(model => model.InitialCatalog, new {htmlAttributes = new {@class = "form-control input-sm"}})
                @Html.ValidationMessageFor(model => model.InitialCatalog, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-6">
                @Html.LabelFor(model => model.UserID)
                @Html.EditorFor(model => model.UserID, new {htmlAttributes = new {@class = "form-control input-sm"}})
                @Html.ValidationMessageFor(model => model.UserID, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-6">
                @Html.LabelFor(model => model.Password)
                @Html.EditorFor(model => model.Password, new {htmlAttributes = new {@class = "form-control input-sm"}})
                @Html.ValidationMessageFor(model => model.Password, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-6">
                @Html.LabelFor(model => model.ThresholdReSize)
                @Html.EnumDropDownListFor(model => model.ThresholdReSize, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ThresholdReSize, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-6">
                <input type="submit" value="登録" class="btn btn-primary"/>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


